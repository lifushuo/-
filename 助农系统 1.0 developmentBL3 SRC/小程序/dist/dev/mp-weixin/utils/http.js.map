{"version":3,"file":"http.js","sources":["../../../../src/utils/http.ts"],"sourcesContent":["/**\n * 添加拦截器\n * 拦截 request请求\n * 拦截loadfile文件上传\n * TODO:\n * 1. 非http开头 需要拼接地址\n * 2. 请求超时\n * 3. 添加小程序端 请求头标识\n * 4. 添加token请求头标识\n *\n */\nimport { useMemberStore } from '@/stores'\n\nconst baseURL = 'https://pcapi-xiaotuxian-front-devtest.itheima.net'\n\nconst httpInterceptor = {\n    //拦截前出发\n    invoke(options: UniApp.RequestOptions) {\n        // 1.非http开头 需要拼接地址\n        if (!options.url.startsWith('http')) {\n            options.url = baseURL + options.url\n        }\n        //2. 需求超时时间\n        options.timeout = 100000\n        options.header = {\n            ...options.header,\n            'source-client': 'miniapp',\n        }\n        //4. 添加token 请求头\n        const memberStore = useMemberStore()\n        const token = memberStore.profile?.token\n        if (token) {\n            options.header.Authorization = token\n        }\n        // console.log(options)\n    },\n}\n\nuni.addInterceptor('request', httpInterceptor)\nuni.addInterceptor('uploadFile', httpInterceptor)\n\ninterface Data<T> {\n    code: number\n    msg: string\n    result: T\n}\n\ninterface Data2<T> {\n    code: number\n    msg: string\n    data: T\n}\n\nexport const http2 = <T>(options: UniApp.RequestOptions) => {\n    if (!options.url.startsWith('http')) {\n        options.url = 'http://127.0.0.1:8080' + options.url\n    }\n    //2. 需求超时时间\n    options.timeout = 100000\n    options.header = {\n        ...options.header,\n        'source-client': 'miniapp',\n    }\n    //4. 添加token 请求头\n    const memberStore = useMemberStore()\n    const token = memberStore.profile?.token\n    if (token) {\n        options.header.Authorization = token\n    }\n    // console.log(options)\n\n    return new Promise<Data2<T>>((resolve, reject) => {\n        uni.request({\n            ...options,\n            success(result) {\n                //状态码 2XX\n                if (result.statusCode >= 200 && result.statusCode < 300) {\n                    resolve(result.data as Data2<T>)\n                } else if (result.statusCode == 401) {\n                    //401错误 ，调用reject 清理用户信息 ，跳转到登录页\n                    const memberStore = useMemberStore()\n                    memberStore.clearProfile()\n                    uni.navigateTo({ url: '/pages/login/login' })\n                    uni.showToast({\n                        icon: 'none',\n                        title: '获取用户信息失败',\n                        duration: 2000,\n                    })\n                    reject(result)\n                } else {\n                    uni.showToast({\n                        icon: 'none',\n                        title: (result.data as Data2<T>).msg || '请求错误',\n                        duration: 2000,\n                    })\n                    reject(result)\n                }\n            },\n            //响应失败\n            fail(result) {\n                uni.showToast({\n                    icon: 'none',\n                    title: '网络错误，换个网络试试',\n                })\n                reject(result)\n            },\n        })\n    })\n}\n\nexport const http = <T>(options: UniApp.RequestOptions) => {\n    return new Promise<Data<T>>((resolve, reject) => {\n        uni.request({\n            ...options,\n            success(result) {\n                //状态码 2XX\n                if (result.statusCode >= 200 && result.statusCode < 300) {\n                    resolve(result.data as Data<T>)\n                } else if (result.statusCode == 401) {\n                    //401错误 ，调用reject 清理用户信息 ，跳转到登录页\n                    const memberStore = useMemberStore()\n                    memberStore.clearProfile()\n                    uni.navigateTo({ url: '/pages/login/login' })\n                    uni.showToast({\n                        icon: 'none',\n                        title: '获取用户信息失败',\n                        duration: 2000,\n                    })\n                    reject(result)\n                } else {\n                    uni.showToast({\n                        icon: 'none',\n                        title: (result.data as Data<T>).msg || '请求错误',\n                        duration: 2000,\n                    })\n                    reject(result)\n                }\n            },\n            //响应失败\n            fail(result) {\n                uni.showToast({\n                    icon: 'none',\n                    title: '网络错误，换个网络试试',\n                })\n                reject(result)\n            },\n        })\n    })\n}\n"],"names":["useMemberStore","uni","memberStore"],"mappings":"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"}